{"version":3,"sources":["components/devices/Device.js","helpers/apiService.js","components/devices/DeviceDetailsDialog.js","components/devices/Devices.js","components/devices/DevicesContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Device","device","setDeviceId","setShowDeviceDetailsDialog","platform","name","udid","busy","sdk","realDevice","onClick","className","icon","faAndroid","faApple","OverlayTrigger","placement","overlay","Tooltip","id","faMobileAlt","color","faDesktop","fetchDeviceDetails","a","fetch","DeviceDetailsDialog","show","onHide","deviceId","useState","loading","setLoading","error","setError","deviceDetails","setDeviceDetails","useEffect","apiService","then","res","json","details","catch","_","Modal","size","aria-labelledby","centered","Header","Title","Body","manufacturer","model","brand","Footer","Button","Devices","devices","showDeviceDetailsDialog","map","DevicesContainer","setDevices","faTruckLoading","faSkullCrossbones","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10b9e447.chunk.js","sourcesContent":["import {OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport '../../App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faAndroid, faApple} from '@fortawesome/free-brands-svg-icons';\nimport {faDesktop, faMobileAlt} from '@fortawesome/free-solid-svg-icons';\n\n\nconst Device = ({device, setDeviceId, setShowDeviceDetailsDialog}) => {\n    const {platform, name, udid, busy, sdk, realDevice} = device;\n    return (\n        <div\n            onClick={() => {\n                setDeviceId(udid);\n                setShowDeviceDetailsDialog(true);\n            }}\n            className=\"deviceTile\"\n            key={udid}>\n            <div>\n                {platform === 'android' ? (\n                    <FontAwesomeIcon icon={faAndroid}/>\n                ) : (\n                    <FontAwesomeIcon icon={faApple}/>\n                )}\n            </div>\n            <div>\n                <OverlayTrigger\n                    placement=\"bottom\"\n                    overlay={<Tooltip id={`tooltip-bottom`}>{udid}</Tooltip>}\n                >\n                    <div className=\"names\">{name ? `${name} (SDK - ${sdk})` : `${udid} (SDK - ${sdk})`}</div>\n                </OverlayTrigger>\n            </div>\n            <div>\n                {realDevice ? (\n                    <div>\n                        <FontAwesomeIcon icon={faMobileAlt} color=\"black\"/>\n                        <span>&nbsp;Mobile</span>\n                    </div>\n                ) : (\n                    <div>\n                        <FontAwesomeIcon icon={faDesktop} color=\"black\"/>\n                        <span>&nbsp;Emulated</span>\n                    </div>\n                )}\n            </div>\n            <div>\n                {busy ? (\n                    <div>\n                        <FontAwesomeIcon icon={faMobileAlt} color=\"red\"/>\n                        <span className=\"text-danger\">&nbsp;Busy</span>\n                    </div>\n                ) : (\n                    <div>\n                        <FontAwesomeIcon icon={faMobileAlt} color=\"green\"/>\n                        <span className=\"text-success\">&nbsp;Free</span>\n                    </div>\n                )}\n            </div>\n\n        </div>\n    );\n};\n\nexport default Device;\n","export default {\n    fetchDeviceDetails: async () => {\n        return await fetch('/deviceDetailsSample.json');\n    }\n}","import Modal from 'react-bootstrap/Modal';\nimport {Button} from 'react-bootstrap';\nimport './styles/Devices.css';\nimport '../../App.css';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faDesktop, faMobileAlt} from '@fortawesome/free-solid-svg-icons';\nimport {useEffect, useState} from 'react';\nimport apiService from '../../helpers/apiService';\n\nfunction DeviceDetailsDialog({show, onHide, deviceId}) {\n\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n    const [deviceDetails, setDeviceDetails] = useState();\n\n    useEffect(() => {\n        apiService.fetchDeviceDetails()\n            .then((res) => res.json())\n            .then((details) => {\n                setDeviceDetails(details);\n                setLoading(false);\n            }).catch((_) => {\n            setLoading(false);\n            setError(true);\n        });\n    }, []);\n\n    if (loading || error)\n        return <div>error</div>\n\n    return (\n        <Modal\n            onHide={onHide}\n            show={show}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <div className=\"modalContainer\">\n                <Modal.Header onClick={onHide}>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        {deviceDetails.name ?\n                            `${deviceDetails.name}` :\n                            `${deviceDetails.udid}`}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <h4 className=\"mb-2\">SDK 13.5</h4>\n                    <h5 className=\"deviceDetail\">\n                        <span className=\"mr-4 w-25\">Manufacturer:</span>\n                        <span>&nbsp;{deviceDetails.manufacturer}</span>\n                    </h5>\n                    <h5 className=\"deviceDetail\">\n                        <span className=\"mr-4 w-25\">Model:</span>\n                        <span>&nbsp;{deviceDetails.model}</span>\n                    </h5>\n                    <h5 className=\"deviceDetail\">\n                        <span className=\"mr-4 w-25\">Brand:</span>\n                        <span>&nbsp;{deviceDetails.brand}</span>\n                    </h5>\n                    <h5 className=\"deviceDetail\">\n                        <span className=\"mr-4 w-25\">Status:</span>\n                        {deviceDetails.busy ? (\n                            <span>\n                                <FontAwesomeIcon icon={faMobileAlt} color=\"red\"/>\n                                <span className=\"text-danger\">&nbsp;Busy</span>\n                            </span>\n                        ) : (\n                            <span>\n                                <FontAwesomeIcon icon={faMobileAlt} color=\"green\"/>\n                                <span className=\"text-success\">&nbsp;Free</span>\n                            </span>\n                        )}\n                    </h5>\n                    <h5 className=\"deviceDetail\">\n                        <span className=\"mr-4 w-25\">Type:</span>\n                        {deviceDetails.realDevice ? (\n                            <span>\n                                <FontAwesomeIcon icon={faMobileAlt} color=\"black\"/>\n                                <span>&nbsp;Mobile</span>\n                            </span>\n                        ) : (\n                            <span>\n                                <FontAwesomeIcon icon={faDesktop} color=\"black\"/>\n                                <span>&nbsp;Emulated</span>\n                            </span>\n                        )}\n                    </h5>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button onClick={onHide} className=\"deviceDetailsCloseButton\">Close</Button>\n                </Modal.Footer>\n            </div>\n        </Modal>\n    );\n}\n\n\nexport default DeviceDetailsDialog;","import Device from './Device';\nimport DeviceDetailsDialog from './DeviceDetailsDialog';\nimport {useState} from 'react';\n\nconst Devices = ({devices}) => {\n        const [showDeviceDetailsDialog, setShowDeviceDetailsDialog] = useState(false);\n        const [deviceId, setDeviceId] = useState('');\n\n        return (\n            <>\n                <section className=\"grid-container\">\n                    {devices.map((device) => (\n                        <>\n                            <Device device={device}\n                                    setDeviceId={setDeviceId}\n                                    setShowDeviceDetailsDialog={setShowDeviceDetailsDialog}\n                            />\n\n                        </>\n                    ))}\n                </section>\n                <DeviceDetailsDialog\n                    show={showDeviceDetailsDialog}\n                    deviceId={deviceId}\n                    onHide={() => setShowDeviceDetailsDialog(false)}\n                />\n            </>\n        );\n    }\n;\n\nexport default Devices;\n","import {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {useEffect, useState} from 'react';\nimport {\n    faTruckLoading,\n    faSkullCrossbones,\n} from '@fortawesome/free-solid-svg-icons';\nimport Devices from './Devices';\n\nconst DevicesContainer = () => {\n    const [loading, setLoading] = useState(true);\n    const [devices, setDevices] = useState([]);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        fetch('/sample.json')\n            .then((res) => res.json())\n            .then(\n                (devices) => {\n                    setLoading(false);\n                    setDevices(devices);\n                }).catch((_) => {\n                setLoading(false);\n                setError(true);\n            }\n        );\n    }, []);\n\n    if (loading) {\n        return (\n            <div className=\"d-flex flex-column bd-highlight mt-4 text-center\">\n                <div className=\"p-2 bd-highlight\">\n                    <FontAwesomeIcon icon={faTruckLoading} size=\"9x\" color=\"green\"/>\n                </div>\n                <div className=\"p-2 bd-highlight\">Loading your devices</div>\n            </div>\n        );\n    } else if (error) {\n        return (\n            <div className=\"d-flex flex-column bd-highlight mb-4 text-center\">\n                <div className=\"p-2 bd-highlight\">\n                    <FontAwesomeIcon icon={faSkullCrossbones} size=\"9x\" color=\"red\"/>\n                </div>\n                <div className=\"p-2 bd-highlight\">Muhahahah Something went wrong</div>\n            </div>\n        );\n    } else {\n        return <Devices devices={devices}/>;\n    }\n};\n\nexport default DevicesContainer;\n","import './App.css';\nimport DevicesContainer from './components/devices/DevicesContainer';\n\nconst App = () => (\n  <div>\n    <div className=\"header\">\n      <h1>Appium Device Farm</h1>\n    </div>\n    <DevicesContainer />\n  </div>\n);\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}